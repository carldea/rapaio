2017-11-29
===========
===========
RegressionsPerformanceTest.performanceRCartDepth12Serial50k: [measured 10 out of 12 rounds, threads: 1 (sequential)]
 round: 1.32 [+- 0.08], round.block: 0.01 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 11, GC.time: 0.04, time.total: 19.32, time.warmup: 6.16, time.bench: 13.16

2017-11-29
===========

Remove lambda, add class predicate
===========
RegressionsPerformanceTest.performanceRCartDepth12Serial50k: [measured 10 out of 12 rounds, threads: 1 (sequential)]
 round: 1.13 [+- 0.05], round.block: 0.02 [+- 0.01], round.gc: 0.00 [+- 0.00], GC.calls: 27, GC.time: 0.10, time.total: 16.56, time.warmup: 5.24, time.bench: 11.32
2017-12-01
==========
remove collection of candidates
==========
RegressionsPerformanceTest.performanceRCartDepth12Serial50k: [measured 10 out of 12 rounds, threads: 1 (sequential)]
 round: 1.11 [+- 0.03], round.block: 0.03 [+- 0.02], round.gc: 0.00 [+- 0.00], GC.calls: 10, GC.time: 0.04, time.total: 16.52, time.warmup: 5.45, time.bench: 11.07

2018-06-27
==========

RegressionsPerformanceTest.performanceRCartDepth12Serial200k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 2.33 [+- 0.02], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 12, GC.time: 0.42, time.total: 23.94, time.warmup: 7.64, time.bench: 16.30
RegressionsPerformanceTest.performanceRCartDepth12Serial50k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 0.56 [+- 0.04], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 3, GC.time: 0.08, time.total: 5.03, time.warmup: 1.09, time.bench: 3.95
RegressionsPerformanceTest.performanceRCartDepth12Serial5k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 0.06 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 0, GC.time: 0.00, time.total: 0.54, time.warmup: 0.12, time.bench: 0.41

2018-06-28
==========

sorting with fastutil

RegressionsPerformanceTest.performanceRCartDepth12Serial200k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 1.52 [+- 0.05], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 16, GC.time: 0.04, time.total: 15.63, time.warmup: 4.97, time.bench: 10.66
RegressionsPerformanceTest.performanceRCartDepth12Serial50k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 0.36 [+- 0.03], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 5, GC.time: 0.01, time.total: 3.21, time.warmup: 0.71, time.bench: 2.50
RegressionsPerformanceTest.performanceRCartDepth12Serial5k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 0.04 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 1, GC.time: 0.00, time.total: 0.37, time.warmup: 0.10, time.bench: 0.28

var index instead of var name

RegressionsPerformanceTest.performanceRCartDepth12Serial200k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 1.15 [+- 0.12], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 16, GC.time: 0.04, time.total: 12.98, time.warmup: 4.96, time.bench: 8.02
RegressionsPerformanceTest.performanceRCartDepth12Serial50k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 0.25 [+- 0.01], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 4, GC.time: 0.02, time.total: 2.28, time.warmup: 0.54, time.bench: 1.74
RegressionsPerformanceTest.performanceRCartDepth12Serial5k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 0.04 [+- 0.01], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 1, GC.time: 0.00, time.total: 0.33, time.warmup: 0.08, time.bench: 0.25

weighted mean uses copy arrays

RegressionsPerformanceTest.performanceRCartDepth12Serial200k: [measured 10 out of 12 rounds, threads: 1 (sequential)]
 round: 1.05 [+- 0.29], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 26, GC.time: 0.06, time.total: 15.06, time.warmup: 4.56, time.bench: 10.50
RegressionsPerformanceTest.performanceRCartDepth12Serial50k: [measured 10 out of 12 rounds, threads: 1 (sequential)]
 round: 0.22 [+- 0.03], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 7, GC.time: 0.01, time.total: 2.67, time.warmup: 0.47, time.bench: 2.21
RegressionsPerformanceTest.performanceRCartDepth12Serial5k: [measured 10 out of 12 rounds, threads: 1 (sequential)]
 round: 0.03 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 0, GC.time: 0.00, time.total: 0.33, time.warmup: 0.07, time.bench: 0.26

mean uses copy array

RegressionsPerformanceTest.performanceRCartDepth12Serial200k: [measured 10 out of 12 rounds, threads: 1 (sequential)]
 round: 1.07 [+- 0.52], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 24, GC.time: 0.05, time.total: 17.58, time.warmup: 6.84, time.bench: 10.75
RegressionsPerformanceTest.performanceRCartDepth12Serial50k: [measured 10 out of 12 rounds, threads: 1 (sequential)]
 round: 0.20 [+- 0.01], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 7, GC.time: 0.01, time.total: 2.46, time.warmup: 0.46, time.bench: 2.00
RegressionsPerformanceTest.performanceRCartDepth12Serial5k: [measured 10 out of 12 rounds, threads: 1 (sequential)]
 round: 0.02 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 1, GC.time: 0.00, time.total: 0.32, time.warmup: 0.08, time.bench: 0.25

2018-07-03
==========

let only mapping for rtree

RegressionsPerformanceTest.performanceRCartDepth12Serial200k: [measured 15 out of 25 rounds, threads: 1 (sequential)]
 round: 1.27 [+- 0.04], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 29, GC.time: 0.05, time.total: 36.30, time.warmup: 17.20, time.bench: 19.09
RegressionsPerformanceTest.performanceRCartDepth12Serial50k: [measured 15 out of 25 rounds, threads: 1 (sequential)]
 round: 0.26 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 8, GC.time: 0.01, time.total: 6.55, time.warmup: 2.63, time.bench: 3.92
RegressionsPerformanceTest.performanceRCartDepth12Serial5k: [measured 15 out of 25 rounds, threads: 1 (sequential)]
 round: 0.03 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 1, GC.time: 0.00, time.total: 0.79, time.warmup: 0.35, time.bench: 0.44

