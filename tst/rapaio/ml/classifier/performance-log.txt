2018-06-21
==========

ClassifiersPerformanceTest.performanceCartRuns12Serial50k: [measured 5 out of 7 rounds, threads: 1 (sequential)]
 round: 2.51 [+- 0.04], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 2, GC.time: 0.02, time.total: 19.81, time.warmup: 7.28, time.bench: 12.53
ClassifiersPerformanceTest.performanceCartRuns12Serial200k: [measured 5 out of 7 rounds, threads: 1 (sequential)]
 round: 12.93 [+- 0.76], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 18, GC.time: 0.87, time.total: 89.21, time.warmup: 24.57, time.bench: 64.64
ClassifiersPerformanceTest.performanceCartRuns12Serial5k: [measured 5 out of 7 rounds, threads: 1 (sequential)]
 round: 0.24 [+- 0.06], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 1, GC.time: 0.15, time.total: 1.66, time.warmup: 0.45, time.bench: 1.22

2018-06-22
==========

remove call to index and value using names

ClassifiersPerformanceTest.performanceCartRuns12Serial50k: [measured 5 out of 7 rounds, threads: 1 (sequential)]
 round: 2.01 [+- 0.12], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 1, GC.time: 0.01, time.total: 15.63, time.warmup: 5.58, time.bench: 10.05
ClassifiersPerformanceTest.performanceCartRuns12Serial200k: [measured 5 out of 7 rounds, threads: 1 (sequential)]
 round: 9.17 [+- 0.10], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 15, GC.time: 1.18, time.total: 65.40, time.warmup: 19.54, time.bench: 45.87
ClassifiersPerformanceTest.performanceCartRuns12Serial5k: [measured 5 out of 7 rounds, threads: 1 (sequential)]
 round: 0.19 [+- 0.04], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 2, GC.time: 0.14, time.total: 1.24, time.warmup: 0.31, time.bench: 0.93

2018-06-26
==========

sorting with fastutil tools

ClassifiersPerformanceTest.performanceCartRuns12Serial50k: [measured 5 out of 7 rounds, threads: 1 (sequential)]
 round: 1.41 [+- 0.56], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 5, GC.time: 0.05, time.total: 11.69, time.warmup: 4.67, time.bench: 7.02
ClassifiersPerformanceTest.performanceCartRuns12Serial200k: [measured 5 out of 7 rounds, threads: 1 (sequential)]
 round: 4.38 [+- 0.06], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 4, GC.time: 0.12, time.total: 30.99, time.warmup: 9.08, time.bench: 21.91
ClassifiersPerformanceTest.performanceCartRuns12Serial5k: [measured 5 out of 7 rounds, threads: 1 (sequential)]
 round: 0.09 [+- 0.00], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 0, GC.time: 0.00, time.total: 0.67, time.warmup: 0.20, time.bench: 0.47

2018-06-27
==========

introducing in mappings IntArrayList - no big performance, but it will help in future
=> total marriage with fastutil

ClassifiersPerformanceTest.performanceCartRuns12Serial50k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 1.12 [+- 0.04], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 4, GC.time: 0.03, time.total: 14.18, time.warmup: 6.38, time.bench: 7.80
ClassifiersPerformanceTest.performanceCartRuns12Serial200k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 4.45 [+- 0.17], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 9, GC.time: 0.08, time.total: 42.00, time.warmup: 10.85, time.bench: 31.14
ClassifiersPerformanceTest.performanceCartRuns12Serial5k: [measured 7 out of 9 rounds, threads: 1 (sequential)]
 round: 0.11 [+- 0.02], round.block: 0.00 [+- 0.00], round.gc: 0.00 [+- 0.00], GC.calls: 1, GC.time: 0.05, time.total: 1.40, time.warmup: 0.61, time.bench: 0.79
